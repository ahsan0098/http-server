definitions:
  models.Product:
    description: Product represents an item in the store.
    properties:
      id:
        example: 1
        type: integer
      name:
        description: |-
          Name of the product
          required: true
        example: Apple Watch
        type: string
      price:
        description: |-
          Price of the product in cents
          required: true
        example: 299
        type: integer
    required:
    - name
    - price
    type: object
host: localhost:9090
info:
  contact: {}
  description: This is a simple API for managing products.
  title: CoreNet Product API
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: Get all the products from the store
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product in the store
      parameters:
      - description: Product to create
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
      summary: Add a new product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product using its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Product deleted successfully
          schema:
            type: string
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Product not found
          schema:
            type: string
      summary: Delete product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Update an existing product
      tags:
      - products
swagger: "2.0"
